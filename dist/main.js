/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/createClass.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/defineProperty.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/regenerator/index.js?");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n\n\n//# sourceURL=webpack:///./node_modules/regenerator-runtime/runtime.js?");

/***/ }),

/***/ "./src/js/constants.js":
/*!*****************************!*\
  !*** ./src/js/constants.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return App; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nvar App =\n/*#__PURE__*/\nfunction () {\n  function App() {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, App);\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(App, [{\n    key: \"getVersion\",\n    value: function getVersion() {\n      return 9.809;\n    }\n  }]);\n\n  return App;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/constants.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"./src/js/constants.js\");\n\n\n\n\nvar _KEYBOARD_CODE;\n\n\n\nvar axios = function axios() {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      resolve({\n        id: 24\n      });\n    }, 2000);\n  });\n};\n\nvar getId =\n/*#__PURE__*/\nfunction () {\n  var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()(\n  /*#__PURE__*/\n  _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee() {\n    var result;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios();\n\n          case 2:\n            result = _context.sent;\n            alert(\"Id from axios is:\".concat(result.id));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getId() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar users = new Map();\nusers.set(12, {\n  name: \"henokg\",\n  email: \"henok@gmail.com\"\n});\ngetId();\nvar app = new _constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\nconsole.log(\"App version: \".concat(app.getVersion())); // remove n occurances of '!'\n\nvar remover = function remover(word) {\n  return function (occurance) {\n    for (var i = 0; i < occurance; i++) {\n      word = word.replace(\"!\", \"\");\n    }\n\n    return word;\n  };\n}; // reduce but grow\n// multiply everything inside an array\n\n\nvar multiplier = function multiplier(arr) {\n  return arr.reduce(function (result, element) {\n    return result * element;\n  });\n}; // render list into human readable string\n// Format a string of names like 'Bart, Lisa & Maggie'.\n\n\nvar list = function list(arr) {\n  var result = \"\";\n  arr.forEach(function (name, i) {\n    !i ? result += name.name : i === arr.length - 1 ? result += \" & \".concat(name.name) : result += \", \".concat(name.name);\n  });\n  return result;\n}; // Digital Root\n// sum all digits in a number n and reduce to a single digit\n\n\nvar digital_root = function digital_root(number) {\n  var numberInArrayForm = number.toString().split(\"\").map(function (string) {\n    return Number(string);\n  });\n  var digitalRoot = numberInArrayForm.reduce(function (previous, current) {\n    return previous + current;\n  });\n  return digitalRoot > 9 ? digital_root(digitalRoot) : digitalRoot;\n}; // Tribonacci Sequence\n// given signature and n return the tribonacci sequence of n elements\n\n\nvar fibonacci = function fibonacci(signature, n) {\n  for (var i = 0; i < n - 3; i++) {\n    signature.push(signature[i] + signature[i + 1] + signature[i + 2]);\n  }\n\n  return signature.slice(0, n); // original code was\n\n  if (!n) return [];\n  if (n <= 3) return signature.slice(0, n);\n  var lengthOfSignature = signature.length;\n  if (n === lengthOfSignature) return signature;\n  var sumOfLast3Elements = signature.slice(lengthOfSignature - 3, lengthOfSignature).reduce(function (previous, current) {\n    return previous + current;\n  });\n  signature.push(sumOfLast3Elements);\n  return fibonacci(signature, n);\n}; // Sum of two lowest positive integers in an array\n\n\nvar sum = function sum(array) {\n  array.sort(function (a, b) {\n    return a - b;\n  });\n  return array[0] + array[1];\n}; // Complementary DNA\n\n\nvar DNAStrand = function DNAStrand(dna) {\n  return dna.replace(/./g, function (c) {\n    return DNAStrand.pairs[c];\n  });\n  DNAStrand.pairs = {\n    A: \"T\",\n    T: \"A\",\n    C: \"G\",\n    G: \"C\"\n  }; // original code\n\n  var DNA_MAP = {\n    A: \"T\",\n    T: \"A\",\n    C: \"G\",\n    G: \"C\"\n  };\n  return dna.split(\"\").map(function (element) {\n    return DNA_MAP[element];\n  }).join(\"\");\n}; // Counting Duplicates\n\n\nvar countDuplicates = function countDuplicates(text) {\n  return (text.toLowerCase().split(\"\").sort().join(\"\").match(/([^])\\1+/g) || []).length; // original code\n\n  var duplicates = {};\n  var textInArrayForm = text.split(\"\").map(function (element) {\n    return element.toLowerCase();\n  });\n\n  var _loop = function _loop(i) {\n    var element = textInArrayForm[i];\n    if (textInArrayForm.filter(function (_char) {\n      return _char === element;\n    }).length === 1) return \"continue\";\n    duplicates[element] = 0;\n  };\n\n  for (var i = 0; i < textInArrayForm.length; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return Object.keys(duplicates).length;\n}; // Cut rectangles into squares\n\n\nvar sqInRect = function sqInRect(width, length) {\n  var arr = [];\n  if (lng === wdth) return null;\n\n  while (lng > 0 && wdth > 0) {\n    arr.push(lng > wdth ? wdth : lng);\n    lng > wdth ? lng -= wdth : wdth -= lng;\n  }\n\n  return arr;\n}; // Morse Code Advanced\n\n\nvar decodeBits = function decodeBits(bits) {\n  // trim() but for 0's instead of trailing spaces\n  bits = bits.replace(/(^0*|0*$)/g, \"\"); // getTransmissionRate could've been changed to\n  // var rate = Math.min.apply(null, bits.match(/0+|1+/g).map(function(b) { return b.length }))\n\n  var getTransmissionRate = function getTransmissionRate(bits) {\n    var onBits1 = (bits.match(/[1]+/g) || [\"\"]).sort()[0];\n    var onBits0 = (bits.match(/[0]+/g) || [\"\"]).sort()[0];\n    if (onBits0.length === 0 || onBits1.length < onBits0.length) return onBits1.length;\n    return onBits0.length;\n  };\n\n  var transmissionRate = getTransmissionRate(bits);\n  var regExpForDash = new RegExp(\"[1]{\".concat(transmissionRate * 3, \"}\"), \"g\");\n  var regExpForDot = new RegExp(\"[1]{\".concat(transmissionRate, \"}\"), \"g\");\n  var regExpForSpace = new RegExp(\"[0]{\".concat(transmissionRate, \"}\"), \"g\");\n  var regExpForCharacterEnd = new RegExp(\"[0]{\".concat(transmissionRate * 3, \"}\"), \"g\");\n  var regExpForWordEnd = new RegExp(\"[0]{\".concat(transmissionRate * 7, \"}\"), \"g\");\n  return bits.replace(regExpForDash, \"-\").replace(regExpForDot, \".\").replace(regExpForWordEnd, \"   \").replace(regExpForCharacterEnd, \" \").replace(regExpForSpace, \"\");\n};\n\nvar decodeMorse = function decodeMorse(morseCode) {\n  var decodeMorseWord = function decodeMorseWord(morseWord) {\n    return morseWord.split(\" \").map(decodeChar).join(\"\");\n  };\n\n  var decodeChar = function decodeChar(morseChar) {\n    return MORSE_CODE[morseChar];\n  };\n\n  return morseCode.split(\"   \").map(decodeMorseWord).join(\" \");\n}; // console.log(\n//   decodeBits(\n//     \"1100110011001100000011000000111111001100111111001111110000000000000011001111110011111100111111000000110011001111110000001111110011001100000011\"\n//   )\n// );\n// Texting with an old-school mobile phone\n\n\nvar sendMessage = function sendMessage(message) {\n  var isLastCharUpperCase = false;\n  var holding = false;\n\n  var encodeWord = function encodeWord(word) {\n    return word.split(\"\").map(encodeChar).join(\"\");\n  };\n\n  var encodeChar = function encodeChar(_char2, index, array) {\n    var encodedChar = \"\";\n\n    if (shouldSwitchCase(_char2)) {\n      encodedChar += \"#\";\n    } else if (holding && isOnSameKeyAsPreviousChar(_char2, array[index - 1])) {\n      encodedChar += \" \";\n    }\n\n    if (isLetter(_char2) && isUpperCase(_char2) && !isLastCharUpperCase) {\n      isLastCharUpperCase = true;\n      console.log(\"caping:\", _char2);\n      encodedChar += encodeUpperCase(_char2);\n    } else {\n      isLetter(_char2) && !isUpperCase(_char2) ? isLastCharUpperCase = false : \"\";\n      console.log(_char2, \"##\", isLastCharUpperCase);\n      encodedChar += getCode(_char2);\n    }\n\n    return encodedChar;\n  };\n\n  var shouldSwitchCase = function shouldSwitchCase(_char3) {\n    return !holding && isLastCharUpperCase && isLetter(_char3) && !isUpperCase(_char3);\n  };\n\n  var isOnSameKeyAsPreviousChar = function isOnSameKeyAsPreviousChar(currentChar, previousChar) {\n    if (!previousChar) return false;\n    return getCode(currentChar).toString().charAt(0) === getCode(previousChar).toString().charAt(0);\n  };\n\n  var isUpperCase = function isUpperCase(_char4) {\n    return _char4.charCodeAt(0) === _char4.toUpperCase().charCodeAt(0);\n  };\n\n  var encodeUpperCase = function encodeUpperCase(upperCaseChar) {\n    return \"#\" + getCode(upperCaseChar);\n  };\n\n  var getCode = function getCode(_char5) {\n    if (isNumberOrSpecialChar(_char5)) return encodeNumberAndSpecialChar(_char5);\n    holding = false;\n    return KEYBOARD_CODE[_char5.toLowerCase()];\n  };\n\n  var isLetter = function isLetter(_char6) {\n    return _char6.match(/[a-zA-Z]/) !== null;\n  };\n\n  var isNumberOrSpecialChar = function isNumberOrSpecialChar(numberOrSpecialChar) {\n    return numberOrSpecialChar.match(/[\\*#]|\\d/);\n  };\n\n  var encodeNumberAndSpecialChar = function encodeNumberAndSpecialChar(numberOrSpecialChar) {\n    holding = true;\n    return numberOrSpecialChar + \"-\";\n  };\n\n  return message.split(\" \").map(encodeWord).join(\"0\");\n};\n\nvar KEYBOARD_CODE = (_KEYBOARD_CODE = {\n  \" \": 0,\n  \".\": 1,\n  \",\": 11,\n  \"?\": 111,\n  \"!\": 1111,\n  \"'\": \"*\",\n  \"-\": \"**\",\n  \"+\": \"***\",\n  \"=\": \"****\",\n  b: 22,\n  c: 222,\n  a: 2\n}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"b\", 22), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"c\", 222), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"d\", 3), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"e\", 33), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"f\", 333), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"g\", 4), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"h\", 44), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"i\", 444), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"j\", 5), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"k\", 55), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"l\", 555), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"m\", 6), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"n\", 66), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"o\", 666), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"p\", 7), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"q\", 77), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"r\", 777), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"s\", 7777), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"t\", 8), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"u\", 88), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"v\", 888), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"w\", 9), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"x\", 99), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"y\", 999), _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(_KEYBOARD_CODE, \"z\", 9999), _KEYBOARD_CODE); // find numbers divisible by a given number\n\nvar divisibleBy = function divisibleBy(numbers, divisor) {\n  return numbers.filter(function (number) {\n    return number % divisor === 0;\n  });\n}; // remove first and last character\n\n\nvar removeFirstAndLastCharacter = function removeFirstAndLastCharacter(string) {\n  return string.substr(1, string.length - 2);\n}; // return sum of array\n\n\nvar sumOfArray = function sumOfArray(array) {\n  return array.reduce(function (sum, currentValue) {\n    return sum + currentValue;\n  }, 0);\n}; // call closeset elevator\n\n\nvar ELEVATOR_NAMES = [\"left\", \"right\"];\n\nvar elevator = function elevator(left, right, calledFrom) {\n  return Math.abs(left - calledFrom) < Math.abs(right - calledFrom) ? ELEVATOR_NAMES[0] : ELEVATOR_NAMES[1];\n}; // Last digit of a large number\n\n\nvar lastDigit = function lastDigit(str1, str2) {\n  return +!+str2 || Math.pow(str1.slice(-1) % 10, str2.slice(-2) % 4 || 4) % 10;\n}; // default arguments\n\n\nvar defaultArguments = function defaultArguments(func, args) {\n  var funcStringified = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : func.toString();\n  var indexOfArgumentsStart = funcStringified.match(/\\(/).index;\n  var indexOfArgumentsEnd = funcStringified.match(/\\)/).index + 1;\n  var partiallyAppliedFunction = funcStringified.substr(0, indexOfArgumentsStart);\n  var functionBody = funcStringified.substr(indexOfArgumentsEnd);\n  funcStringified = funcStringified.slice(indexOfArgumentsStart, indexOfArgumentsEnd);\n\n  for (var _i = 0, _Object$keys = Object.keys(args); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n\n    if (args.hasOwnProperty(key)) {\n      var regExp = new RegExp(\"(\".concat(key, \" = \\\\w+)|(\").concat(key, \")\"));\n      funcStringified = funcStringified.replace(regExp, \"\".concat(key + \" = \" + args[key]));\n    }\n  }\n\n  partiallyAppliedFunction += funcStringified + functionBody;\n  console.log(partiallyAppliedFunction);\n  return new Function(\"return (\" + partiallyAppliedFunction + \");\")();\n};\n\nvar timesFive = function () {\n  var five = 5;\n  return function (a) {\n    return five * a;\n  };\n}();\n\nfunction add(a, b) {\n  return a + b;\n} // const add = (ab, b) => ab + b;\n// var result = defaultArguments(timesFive, { a: 1 });\n// console.log(result());\n\n//# sourceURL=webpack:///./src/js/index.js?");

/***/ })

/******/ });